(()=>{"use strict";const e=()=>{let e="";return navigator.gpu||(e="Your current browser does not support WebGPU!."),e},t="// vertex shader\r\nstruct Output {\r\n    @builtin(position) Position : vec4<f32>,\r\n    @location(0) vColor : vec4<f32>\r\n};\r\n\r\n@stage(vertex)\r\nfn vs_main(@builtin(vertex_index) VertexIndex: u32) -> Output{\r\n    var pos : array<vec2<f32>, 6> = array<vec2<f32>, 6>(\r\n        vec2<f32>(-0.5, 0.7),\r\n        vec2<f32>(0.3, 0.6),\r\n        vec2<f32>(0.5, 0.3),\r\n        vec2<f32>(0.4, -0.5),\r\n        vec2<f32>(-0.4, -0.4),\r\n        vec2<f32>(-0.3, 0.2),\r\n    );\r\n\r\n    var output: Output;\r\n    output.Position = vec4<f32>(pos[VertexIndex], 0.0, 1.0);\r\n    output.vColor = vec4<f32>(1.0,0.0,0.0,1.0);\r\n    return output;\r\n}\r\n\r\n// fragment shader\r\n\r\n@stage(fragment)\r\nfn fs_main(@location(0) vColor: vec4<f32>) -> @location(0) vec4<f32> {\r\n    return vColor;\r\n}";document.getElementById("id-gpu-check").innerHTML=e();const n=(n="point-list")=>{return r=void 0,o=void 0,a=function*(){var r;const o=yield(c=void 0,u=void 0,v=void 0,d=function*(){var t;if(e().includes("Your current browser does not support WebGPU!"))throw"No WebGPU Support!";const n=document.getElementById("canvas-webgpu"),r=yield null===(t=navigator.gpu)||void 0===t?void 0:t.requestAdapter(),o=yield null==r?void 0:r.requestDevice(),i=n.getContext("webgpu"),a=(window.devicePixelRatio,n.clientWidth,n.clientHeight,yield navigator.gpu.getPreferredCanvasFormat());return i.configure({device:o,format:a}),{device:o,canvas:n,format:a,context:i}},new(v||(v=Promise))((function(e,t){function n(e){try{o(d.next(e))}catch(e){t(e)}}function r(e){try{o(d.throw(e))}catch(e){t(e)}}function o(t){var o;t.done?e(t.value):(o=t.value,o instanceof v?o:new v((function(e){e(o)}))).then(n,r)}o((d=d.apply(c,u||[])).next())}))),i=o.device,a=o.format;var c,u,v,d;let l,s;"line-strip"===n&&(l="uint32"),s=i.createRenderPipeline({vertex:{module:i.createShaderModule({code:t}),entryPoint:"vs_main"},fragment:{module:i.createShaderModule({code:t}),entryPoint:"fs_main",targets:[{format:a}]},primitive:{topology:n,stripIndexFormat:l},layout:i.createPipelineLayout({bindGroupLayouts:[]})});const f=i.createCommandEncoder(),p=null===(r=o.context)||void 0===r?void 0:r.getCurrentTexture().createView(),m=f.beginRenderPass({colorAttachments:[{view:p,clearValue:{r:.2,g:.4,b:.2,a:1},loadOp:"clear",storeOp:"store"}]});m.setPipeline(s),m.draw(6),m.end(),i.queue.submit([f.finish()])},new((i=void 0)||(i=Promise))((function(e,t){function n(e){try{u(a.next(e))}catch(e){t(e)}}function c(e){try{u(a.throw(e))}catch(e){t(e)}}function u(t){var r;t.done?e(t.value):(r=t.value,r instanceof i?r:new i((function(e){e(r)}))).then(n,c)}u((a=a.apply(r,o||[])).next())}));var r,o,i,a};document.getElementById("id-primitive").addEventListener("change",(e=>{n(e.srcElement.value)}))})();
//# sourceMappingURL=main.bundle.js.map