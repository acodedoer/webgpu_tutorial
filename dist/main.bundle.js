(()=>{"use strict";const e=()=>{let e="Your current browser supports WebGPU!";return navigator.gpu||(e="Your current browser does not support WebGPU!."),e},t=(e,t,r=GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST)=>{const n=e.createBuffer({size:t.byteLength,usage:r,mappedAtCreation:!0});return new Float32Array(n.getMappedRange()).set(t),n.unmap(),n},r="// vertex shader\r\n\r\nstruct Output {\r\n    @builtin(position) Position : vec4<f32>,\r\n    @location(0) vColor : vec4<f32>\r\n};\r\n\r\n@stage(vertex)\r\nfn vs_main(@location(0) pos: vec4<f32>, @location(1) color: vec4<f32>) -> Output {\r\n    var output: Output;\r\n    output.Position = pos;\r\n    output.vColor = color;\r\n    return output;\r\n}\r\n\r\n// fragment shader\r\n\r\n@stage(fragment)\r\nfn fs_main(@location(0) vColor: vec4<f32>) -> @location(0) vec4<f32> {\r\n    return vColor;\r\n}";var n,o,a,i;document.getElementById("id-gpu-check").innerHTML=e(),n=void 0,o=void 0,i=function*(){const n=yield(v=void 0,p=void 0,g=void 0,m=function*(){var t;if(e().includes("Your current browser does not support WebGPU!"))throw"No WebGPU Support!";const r=document.getElementById("canvas-webgpu"),n=yield null===(t=navigator.gpu)||void 0===t?void 0:t.requestAdapter(),o=yield null==n?void 0:n.requestDevice(),a=r.getContext("webgpu"),i=(window.devicePixelRatio,r.clientWidth,r.clientHeight,yield navigator.gpu.getPreferredCanvasFormat());return a.configure({device:o,format:i}),{device:o,canvas:r,format:i,context:a}},new(g||(g=Promise))((function(e,t){function r(e){try{o(m.next(e))}catch(e){t(e)}}function n(e){try{o(m.throw(e))}catch(e){t(e)}}function o(t){var o;t.done?e(t.value):(o=t.value,o instanceof g?o:new g((function(e){e(o)}))).then(r,n)}o((m=m.apply(v,p||[])).next())}))),o=n.device,a=new Float32Array([-.5,-.5,.5,-.5,-.5,.5,-.5,.5,.5,-.5,.5,.5]),i=new Float32Array([1,0,0,0,1,0,1,1,0,1,1,0,0,1,0,0,0,1]),u=t(o,a),c=t(o,i),s=o.createRenderPipeline({vertex:{module:o.createShaderModule({code:r}),entryPoint:"vs_main",buffers:[{arrayStride:8,attributes:[{shaderLocation:0,format:"float32x2",offset:0}]},{arrayStride:12,attributes:[{shaderLocation:1,format:"float32x2",offset:0}]}]},fragment:{module:o.createShaderModule({code:r}),entryPoint:"fs_main",targets:[{format:n.format}]},primitive:{topology:"triangle-list"},layout:o.createPipelineLayout({bindGroupLayouts:[]})}),d=o.createCommandEncoder(),f=n.context.getCurrentTexture().createView(),l=d.beginRenderPass({colorAttachments:[{view:f,clearValue:{r:.2,g:.4,b:.2,a:1},loadOp:"clear",storeOp:"store"}]});var v,p,g,m;l.setPipeline(s),l.setVertexBuffer(0,u),l.setVertexBuffer(1,c),l.draw(6),l.end(),o.queue.submit([d.finish()])},new((a=void 0)||(a=Promise))((function(e,t){function r(e){try{c(i.next(e))}catch(e){t(e)}}function u(e){try{c(i.throw(e))}catch(e){t(e)}}function c(t){var n;t.done?e(t.value):(n=t.value,n instanceof a?n:new a((function(e){e(n)}))).then(r,u)}c((i=i.apply(n,o||[])).next())}))})();
//# sourceMappingURL=main.bundle.js.map