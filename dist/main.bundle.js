(()=>{"use strict";var e=1e-6,t="undefined"!=typeof Float32Array?Float32Array:Array;function r(){var e=new t(16);return t!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0),e[0]=1,e[5]=1,e[10]=1,e[15]=1,e}function n(e,t,r){var n=t[0],o=t[1],a=t[2],i=t[3],u=t[4],c=t[5],s=t[6],f=t[7],d=t[8],l=t[9],v=t[10],p=t[11],h=t[12],m=t[13],g=t[14],y=t[15],w=r[0],x=r[1],P=r[2],b=r[3];return e[0]=w*n+x*u+P*d+b*h,e[1]=w*o+x*c+P*l+b*m,e[2]=w*a+x*s+P*v+b*g,e[3]=w*i+x*f+P*p+b*y,w=r[4],x=r[5],P=r[6],b=r[7],e[4]=w*n+x*u+P*d+b*h,e[5]=w*o+x*c+P*l+b*m,e[6]=w*a+x*s+P*v+b*g,e[7]=w*i+x*f+P*p+b*y,w=r[8],x=r[9],P=r[10],b=r[11],e[8]=w*n+x*u+P*d+b*h,e[9]=w*o+x*c+P*l+b*m,e[10]=w*a+x*s+P*v+b*g,e[11]=w*i+x*f+P*p+b*y,w=r[12],x=r[13],P=r[14],b=r[15],e[12]=w*n+x*u+P*d+b*h,e[13]=w*o+x*c+P*l+b*m,e[14]=w*a+x*s+P*v+b*g,e[15]=w*i+x*f+P*p+b*y,e}Math.random,Math.PI,Math.hypot||(Math.hypot=function(){for(var e=0,t=arguments.length;t--;)e+=arguments[t]*arguments[t];return Math.sqrt(e)});const o=()=>{let e="";return navigator.gpu||(e="Your current browser does not support WebGPU!."),e},a=(e="canvas-webgpu")=>{return t=void 0,r=void 0,a=function*(){var t;if(o().includes("Your current browser does not support WebGPU!"))throw"No WebGPU Support!";const r=document.getElementById(e),n=yield null===(t=navigator.gpu)||void 0===t?void 0:t.requestAdapter(),a=yield null==n?void 0:n.requestDevice(),i=r.getContext("webgpu"),u=(window.devicePixelRatio,r.clientWidth,r.clientHeight,yield navigator.gpu.getPreferredCanvasFormat());return i.configure({device:a,format:u}),{device:a,canvas:r,format:u,context:i}},new((n=void 0)||(n=Promise))((function(e,o){function i(e){try{c(a.next(e))}catch(e){o(e)}}function u(e){try{c(a.throw(e))}catch(e){o(e)}}function c(t){var r;t.done?e(t.value):(r=t.value,r instanceof n?r:new n((function(e){e(r)}))).then(i,u)}c((a=a.apply(t,r||[])).next())}));var t,r,n,a},i=(e,t,r=GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST)=>{const n=e.createBuffer({size:t.byteLength,usage:r,mappedAtCreation:!0});return new Float32Array(n.getMappedRange()).set(t),n.unmap(),n},u=(t=1,o=[2,2,4],a=[0,0,0],i=[0,1,0])=>{const u=r(),c=r(),s=r();var f,d,l,v,p,h,m,g,y,w,x,P,b,M,C,B,O,U,L,A,S,E,G;return function(e,t,r,n,o){var a,i=1/Math.tan(t/2);e[0]=i/r,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=i,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=-1,e[12]=0,e[13]=0,e[15]=0,null!=o&&o!==1/0?(a=1/(n-o),e[10]=(o+n)*a,e[14]=2*o*n*a):(e[10]=-1,e[14]=-2*n)}(c,2*Math.PI/5,t,.1,100),f=u,l=a,v=i,C=(d=o)[0],B=d[1],O=d[2],U=v[0],L=v[1],A=v[2],S=l[0],E=l[1],G=l[2],Math.abs(C-S)<e&&Math.abs(B-E)<e&&Math.abs(O-G)<e?function(e){e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1}(f):(x=C-S,P=B-E,b=O-G,p=L*(b*=M=1/Math.hypot(x,P,b))-A*(P*=M),h=A*(x*=M)-U*b,m=U*P-L*x,(M=Math.hypot(p,h,m))?(p*=M=1/M,h*=M,m*=M):(p=0,h=0,m=0),g=P*m-b*h,y=b*p-x*m,w=x*h-P*p,(M=Math.hypot(g,y,w))?(g*=M=1/M,y*=M,w*=M):(g=0,y=0,w=0),f[0]=p,f[1]=g,f[2]=x,f[3]=0,f[4]=h,f[5]=y,f[6]=P,f[7]=0,f[8]=m,f[9]=w,f[10]=b,f[11]=0,f[12]=-(p*C+h*B+m*O),f[13]=-(g*C+y*B+w*O),f[14]=-(x*C+P*B+b*O),f[15]=1),n(s,c,u),{viewMatrix:u,projectionMatrix:c,viewProjectionMatrix:s,cameraOption:{eye:o,center:a,zoomMax:100,zoomSpeed:2}}},c="// vertex shader\r\nstruct Output {\r\n    @builtin(position) Position : vec4<f32>,\r\n    @location(0) vColor : vec4<f32>\r\n};\r\n\r\n@stage(vertex)\r\nfn vs_main(@location(0) pos: vec4<f32>, @location(1) color: vec4<f32>) -> Output {\r\n    var output: Output;\r\n    output.Position = pos;\r\n    output.vColor = color;\r\n    return output;\r\n}\r\n\r\n// fragment shader\r\n\r\n@stage(fragment)\r\nfn fs_main(@location(0) vColor: vec4<f32>) -> @location(0) vec4<f32> {\r\n    return vColor;\r\n}";document.getElementById("id-gpu-check").innerHTML=o();const s="// vertex shader\r\nstruct Output {\r\n    @builtin(position) Position : vec4<f32>,\r\n    @location(0) vColor : vec4<f32>\r\n};\r\n\r\n@stage(vertex)\r\nfn vs_main(@location(0) pos: vec4<f32>, @location(1) color: vec4<f32>) -> Output {\r\n    var output: Output;\r\n    output.Position = pos;\r\n    output.vColor = color;\r\n    return output;\r\n}\r\n\r\n// fragment shader\r\n\r\n@stage(fragment)\r\nfn fs_main(@location(0) vColor: vec4<f32>) -> @location(0) vec4<f32> {\r\n    return vColor;\r\n}";document.getElementById("id-gpu-check").innerHTML=o();const f=()=>{return e=void 0,t=void 0,n=function*(){const e=yield a("canvas-webgpu-06"),t=e.device,r=new Float32Array([-.5,-.5,1,0,0,.5,-.5,0,1,0,-.5,.5,1,1,0,.5,.5,0,0,1]),n=new Uint32Array([0,1,2,3,1,2]),o=i(t,r),u=((e,t,r=GPUBufferUsage.INDEX|GPUBufferUsage.COPY_DST)=>{const n=e.createBuffer({size:t.byteLength,usage:r,mappedAtCreation:!0});return new Uint32Array(n.getMappedRange()).set(t),n.unmap(),n})(t,n),c=t.createRenderPipeline({vertex:{module:t.createShaderModule({code:s}),entryPoint:"vs_main",buffers:[{arrayStride:20,attributes:[{shaderLocation:0,format:"float32x2",offset:0},{shaderLocation:1,format:"float32x2",offset:8}]}]},fragment:{module:t.createShaderModule({code:s}),entryPoint:"fs_main",targets:[{format:e.format}]},primitive:{topology:"triangle-list"},layout:t.createPipelineLayout({bindGroupLayouts:[]})}),f=t.createCommandEncoder(),d=e.context.getCurrentTexture().createView(),l=f.beginRenderPass({colorAttachments:[{view:d,clearValue:{r:.2,g:.4,b:.2,a:1},loadOp:"clear",storeOp:"store"}]});l.setPipeline(c),l.setVertexBuffer(0,o),l.setIndexBuffer(u,"uint32"),l.drawIndexed(6),l.end(),t.queue.submit([f.finish()])},new((r=void 0)||(r=Promise))((function(o,a){function i(e){try{c(n.next(e))}catch(e){a(e)}}function u(e){try{c(n.throw(e))}catch(e){a(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(i,u)}c((n=n.apply(e,t||[])).next())}));var e,t,r,n},d="// vertex shader\r\n\r\nstruct Uniforms {\r\n    mvpMatrix : mat4x4<f32>\r\n};\r\n@binding(0) @group(0) var<uniform> uniforms : Uniforms;\r\n\r\nstruct Output {\r\n    @builtin(position) Position : vec4<f32>,\r\n    @location(0) vColor : vec4<f32>\r\n};\r\n\r\n@stage(vertex)\r\nfn vs_main(@location(0) pos: vec4<f32>, @location(1) color: vec4<f32>) -> Output {\r\n    var output: Output;\r\n    output.Position = uniforms.mvpMatrix * pos;\r\n    output.vColor = color;\r\n    return output;\r\n}\r\n\r\n// fragment shader\r\n\r\n @stage(fragment)\r\nfn fs_main(@location(0) vColor: vec4<f32>) -> @location(0) vec4<f32> {\r\n    return vColor;\r\n}";document.getElementById("id-gpu-check").innerHTML=o();const l=()=>{return e=void 0,t=void 0,c=function*(){const e=yield a("canvas-webgpu-07"),t=e.device,o={positions:new Float32Array([-1,-1,1,1,-1,1,1,1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,-1,1,1,1,1,-1,1,-1,-1,-1,-1,1,-1,1,1,-1,1,1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,1,1,1,1,1,1,1,-1,1,1,-1,-1,1,-1,-1,1,1,-1,-1,1,-1,-1,-1,1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1]),colors:new Float32Array([1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1])},c=o.positions.length/3,s=i(t,o.positions),f=i(t,o.colors),l=t.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX,buffer:{type:"uniform"}}]}),v=t.createRenderPipeline({vertex:{module:t.createShaderModule({code:d}),entryPoint:"vs_main",buffers:[{arrayStride:12,attributes:[{shaderLocation:0,format:"float32x3",offset:0}]},{arrayStride:12,attributes:[{shaderLocation:1,format:"float32x3",offset:0}]}]},fragment:{module:t.createShaderModule({code:d}),entryPoint:"fs_main",targets:[{format:e.format}]},primitive:{topology:"triangle-list"},depthStencil:{format:"depth24plus",depthWriteEnabled:!0,depthCompare:"less"},layout:t.createPipelineLayout({bindGroupLayouts:[l]})}),p=r(),h=r();let m=r();m=u(e.canvas.width/e.canvas.height).viewProjectionMatrix;const g=t.createBuffer({size:64,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),y=t.createBindGroup({layout:v.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:g,offset:0,size:64}}]}),w=e.context.getCurrentTexture().createView(),x=t.createTexture({size:[e.canvas.width,e.canvas.height,1],format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT});((e,t=[0,0,0],o=[0,0,0],a=[1,1,1])=>{const i=r(),u=r(),c=r(),s=r(),f=r();var d,l;l=t,(d=s)[0]=1,d[1]=0,d[2]=0,d[3]=0,d[4]=0,d[5]=1,d[6]=0,d[7]=0,d[8]=0,d[9]=0,d[10]=1,d[11]=0,d[12]=l[0],d[13]=l[1],d[14]=l[2],d[15]=1,function(e,t){var r=Math.sin(t),n=Math.cos(t);e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=n,e[6]=r,e[7]=0,e[8]=0,e[9]=-r,e[10]=n,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1}(i,o[0]),function(e,t){var r=Math.sin(t),n=Math.cos(t);e[0]=n,e[1]=0,e[2]=-r,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=r,e[9]=0,e[10]=n,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1}(u,o[1]),function(e,t){var r=Math.sin(t),n=Math.cos(t);e[0]=n,e[1]=r,e[2]=0,e[3]=0,e[4]=-r,e[5]=n,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1}(c,o[2]),function(e,t){e[0]=t[0],e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=t[1],e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=t[2],e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1}(f,a),n(e,i,f),n(e,u,e),n(e,c,e),n(e,s,e)})(p),n(h,m,p),t.queue.writeBuffer(g,0,h);const P=t.createCommandEncoder(),b=P.beginRenderPass({colorAttachments:[{view:w,clearValue:{r:.2,g:.4,b:.2,a:1},loadOp:"clear",storeOp:"store"}],depthStencilAttachment:{view:x.createView(),depthClearValue:1,depthLoadOp:"clear",depthStoreOp:"store",depthReadOnly:!1}});b.setPipeline(v),b.setVertexBuffer(0,s),b.setVertexBuffer(1,f),b.setBindGroup(0,y),b.draw(c),b.end(),t.queue.submit([P.finish()])},new((o=void 0)||(o=Promise))((function(r,n){function a(e){try{u(c.next(e))}catch(e){n(e)}}function i(e){try{u(c.throw(e))}catch(e){n(e)}}function u(e){var t;e.done?r(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(a,i)}u((c=c.apply(e,t||[])).next())}));var e,t,o,c};switch(document.getElementsByTagName("canvas")[0].id.slice(-2)){case"05":v=void 0,p=void 0,m=function*(){const e=yield a("canvas-webgpu-05"),t=e.device,r=new Float32Array([-.5,-.5,1,0,0,.5,-.5,0,1,0,-.5,.5,1,1,0,-.5,.5,1,1,0,.5,-.5,0,1,0,.5,.5,0,0,1]),n=i(t,r),o=t.createRenderPipeline({vertex:{module:t.createShaderModule({code:c}),entryPoint:"vs_main",buffers:[{arrayStride:20,attributes:[{shaderLocation:0,format:"float32x2",offset:0},{shaderLocation:1,format:"float32x2",offset:8}]}]},fragment:{module:t.createShaderModule({code:c}),entryPoint:"fs_main",targets:[{format:e.format}]},primitive:{topology:"triangle-list"},layout:t.createPipelineLayout({bindGroupLayouts:[]})}),u=t.createCommandEncoder(),s=e.context.getCurrentTexture().createView(),f=u.beginRenderPass({colorAttachments:[{view:s,clearValue:{r:.2,g:.4,b:.2,a:1},loadOp:"clear",storeOp:"store"}]});f.setPipeline(o),f.setVertexBuffer(0,n),f.draw(6),f.end(),t.queue.submit([u.finish()])},new((h=void 0)||(h=Promise))((function(e,t){function r(e){try{o(m.next(e))}catch(e){t(e)}}function n(e){try{o(m.throw(e))}catch(e){t(e)}}function o(t){var o;t.done?e(t.value):(o=t.value,o instanceof h?o:new h((function(e){e(o)}))).then(r,n)}o((m=m.apply(v,p||[])).next())}));break;case"06":f();break;case"07":l(),window.addEventListener("resize",(function(){l()}))}var v,p,h,m})();
//# sourceMappingURL=main.bundle.js.map